{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WAKA,MAAMC,EAAe,CAAC,EACtB,IAAIC,EAAY,KAEhBC,KAAO,CACLC,KAAMC,SAASC,cAAc,UAmB/B,MAKMC,EAA0B,CAACC,EAAUC,MArB3C,SAAuBD,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SACT,CAACC,EAASC,KACJL,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAM,GAG7BD,EACAC,EAEJ,EAQEO,CAAcR,EAAUC,GACrBQ,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBS,EAAAnB,GAAOoB,QAAQ,uBAAuBX,QAAeC,MAAS,IAE/DW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBS,EAAAnB,GAAOsB,MAAM,uBAAuBb,QAAeC,MAAS,GAC9D,EAuBJN,KAAKC,KAAKkB,iBAAiB,UApBNC,IACnB,MAAMd,MAAEA,EAAKe,KAAEA,EAAIC,OAAEA,GAAWxB,EAGhC,GAFAsB,EAAEG,iBAEExB,GAAauB,EAAS,EAAG,OAE7B,IAAIE,EAAmBlB,EAEvB,IAAK,IAAImB,EAAI,EAAGA,EAAIH,EAAS,EAAGG,GAAK,EACnC1B,EAAY2B,WACVtB,EACAqB,EAAI,EAAKD,GAAoBH,EAAQf,EACrCmB,EACAD,GAGFzB,EAAY,IACd,IAIFC,KAAKC,KAAKkB,iBAAiB,YApCNC,IACnBtB,EAAasB,EAAEO,OAAOC,MAAQR,EAAEO,OAAOE,cACvCC,QAAQC,IAAIjC,EAAA","sources":["src/js/03-promises.js"],"sourcesContent":["import toastr from 'toastr';\n\nimport './toastr-config';\nimport 'toastr/build/toastr.min.css';\n\nconst inputDataObj = {};\nlet timeoutId = null;\n\nrefs = {\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise(\n    (resolve, reject) => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    },\n    position,\n    delay\n  );\n}\n\nconst onElFormBlur = e => {\n  inputDataObj[e.target.name] = e.target.valueAsNumber;\n  console.log(inputDataObj);\n};\n\nconst promiseResultProcessing = (position, delay) => {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      toastr.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      toastr.error(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    });\n};\n\nconst onFormSubmit = e => {\n  const { delay, step, amount } = inputDataObj;\n  e.preventDefault();\n\n  if (timeoutId || amount < 0) return;\n\n  let nextPromiseDelay = delay;\n\n  for (let i = 1; i < amount + 1; i += 1) {\n    timeoutId = setTimeout(\n      promiseResultProcessing,\n      i > 1 ? (nextPromiseDelay += step) : delay,\n      i,\n      nextPromiseDelay\n    );\n\n    timeoutId = null;\n  }\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.form.addEventListener('focusout', onElFormBlur);\n"],"names":["$4xjOA","parcelRequire","$47d4ff9957288465$var$inputDataObj","$47d4ff9957288465$var$timeoutId","refs","form","document","querySelector","$47d4ff9957288465$var$promiseResultProcessing","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","success","catch","error","addEventListener","e","step","amount","preventDefault","nextPromiseDelay","i","setTimeout","target","name","valueAsNumber","console","log"],"version":3,"file":"03-promises.a02cd355.js.map"}