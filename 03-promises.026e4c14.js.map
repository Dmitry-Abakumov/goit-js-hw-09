{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,WAKA,IAAMC,EAAe,CAAC,EAClBC,EAAY,KAEVC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAmB/B,IAKMC,EAA0B,SAACC,EAAUC,IArB3C,SAAuBD,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SACT,SAACC,EAASC,GACJL,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,SAEvB,GACAD,EACAC,EAEJ,EAQEO,CAAcR,EAAUC,GACrBQ,MAAK,SAAAC,G,IAAGC,EAAAD,EAAAV,SAAUY,EAAAF,EAAAT,MACjBY,EAAAtB,GAAOuB,QAAQ,uBAAsCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,MAC7D,IACCI,OAAM,SAAAN,G,IAAGC,EAAAD,EAAAV,SAAUY,EAAAF,EAAAT,MAClBY,EAAAtB,GAAO0B,MAAM,uBAAsCF,OAAfJ,EAAS,QAAYI,OAANH,EAAM,MAC3D,GACJ,EAsBAjB,EAAKC,KAAKsB,iBAAiB,UApBN,SAAAC,GACnB,IAAQlB,EAAwBR,EAAxBQ,MAAOmB,EAAiB3B,EAAjB2B,KAAMC,EAAW5B,EAAX4B,OAGrB,GAFAF,EAAEG,mBAEE5B,GAAa2B,EAAS,GAI1B,IAFA,IAAIE,EAAmBtB,EAEduB,EAAI,EAAGA,EAAIH,EAAS,EAAGG,GAAK,EACnC9B,EAAY+B,WACV1B,EACAyB,EAAI,EAAKD,GAAoBH,EAAQnB,EACrCuB,EACAD,GAGF7B,EAAY,IAEhB,IAGAC,EAAKC,KAAKsB,iBAAiB,YApCN,SAAAC,GACnB1B,EAAa0B,EAAEO,OAAOC,MAAQR,EAAEO,OAAOE,cACvCC,QAAQC,IAAIrC,EACd,G","sources":["src/js/03-promises.js"],"sourcesContent":["import toastr from 'toastr';\n\nimport './toastr-config';\nimport 'toastr/build/toastr.min.css';\n\nconst inputDataObj = {};\nlet timeoutId = null;\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise(\n    (resolve, reject) => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    },\n    position,\n    delay\n  );\n}\n\nconst onElFormBlur = e => {\n  inputDataObj[e.target.name] = e.target.valueAsNumber;\n  console.log(inputDataObj);\n};\n\nconst promiseResultProcessing = (position, delay) => {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      toastr.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      toastr.error(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    });\n};\n\nconst onFormSubmit = e => {\n  const { delay, step, amount } = inputDataObj;\n  e.preventDefault();\n\n  if (timeoutId || amount < 0) return;\n\n  let nextPromiseDelay = delay;\n\n  for (let i = 1; i < amount + 1; i += 1) {\n    timeoutId = setTimeout(\n      promiseResultProcessing,\n      i > 1 ? (nextPromiseDelay += step) : delay,\n      i,\n      nextPromiseDelay\n    );\n\n    timeoutId = null;\n  }\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.form.addEventListener('focusout', onElFormBlur);\n"],"names":["$jvJkn","parcelRequire","$ce04d3a99e08e73b$var$inputDataObj","$ce04d3a99e08e73b$var$timeoutId","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$promiseResultProcessing","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delay","$parcel$interopDefault","success","concat","catch","error","addEventListener","e","step","amount","preventDefault","nextPromiseDelay","i","setTimeout","target","name","valueAsNumber","console","log"],"version":3,"file":"03-promises.026e4c14.js.map"}